set -g status-keys vi
setw -g mode-keys vi
unbind [
set-option -g default-terminal "screen-256color"

bind-key C-b last-window
bind-key b last-window

# mouse
set -g mouse on
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection
bind-key -T copy-mode-vi DoubleClick1Pane select-pane\; send-keys 'EvB'
bind-key -T copy-mode-vi TripleClick1Pane select-pane\; send-keys -X select-line
bind-key -n DoubleClick1Pane select-pane\; copy-mode -M\; send-keys 'EvB'
bind-key -n TripleClick1Pane select-pane\; copy-mode -M\; send-keys -X select-line
bind-key -T copy-mode-vi MouseDown3Pane select-pane\; send-keys 'Op'

# no escape delay
set -sg escape-time 0

# enable wm window titles
set -g set-titles on

# disable auto renaming
set -g automatic-rename off
set -g allow-rename off

# Start window numbering at 1 (default => 0)
set -g base-index 1

# Renumber windows after removing one
set -g renumber-windows on

# Keep plenty of history for scrollback
set -g history-limit 50000

# Clear screen
bind l send-keys -R\; display "Cleared"\; clear-history\;

# panes
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# copy mode
set-option -s set-clipboard off

if-shell -b 'test -f /mnt/c/Windows/system32/cmd.exe' \
    "bind-key -Tcopy-mode-vi 'O' send -X copy-pipe 'clip.exe'" \
    "bind-key -Tcopy-mode-vi 'O' send -X copy-pipe 'xclip -i -sel p -f | xclip -i -sel c'"
if-shell -b 'test -f /mnt/c/Windows/system32/cmd.exe' \
    "bind-key -Tcopy-mode-vi 'P' run-shell 'tmux set-buffer \"$(powershell.exe -command Get-Clipboard | sed \"s/\r//g\")\"'" \
    "bind-key -Tcopy-mode-vi 'P' run-shell 'tmux set-buffer \"$(xclip -o)\"'"

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send-keys 'O'\; send -X clear-selection
bind-key -Tcopy-mode-vi 'Y' send-keys 'EvBy'
bind-key -Tcopy-mode-vi 'p' send-keys 'P'\; run-shell "tmux paste-buffer"\; send -X cancel

bind-key -n 'C-a' if-shell "$is_vim" 'send-keys C-a' 'copy-mode'
bind-key -n 'C-f' if-shell "$is_vim" 'send-keys C-f' 'copy-mode; send-keys ?'
bind-key -n 'C-u' if-shell "$is_vim" 'send-keys C-u' 'copy-mode; send-keys C-u'
bind-key -Tcopy-mode-vi 'C-f' if-shell "$is_vim" 'send-keys C-f' 'send-keys ?'

# statusbar
set-option -g status-position top
set -g status-right-length '150'
set -g status-style 'bg=black fg=white'
set -g status-interval 5
set -g status-right '#(~/.tmux/gitmux "#{pane_current_path}")'
set-window-option -g window-status-current-style 'bg=white,fg=black'

# style
if-shell -b '[ "$(echo "$tmux_version < 2.9" | bc)" = 1 ]' \
    "set -g pane-border-fg colour233; set -g pane-border-bg colour233" \
    "set -g pane-border-style fg=colour233,bg=colour233"

if-shell -b '[ "$(echo "$tmux_version < 2.9" | bc)" = 1 ]' \
    "set -g pane-active-border-fg colour233, set -g pane-active-border-bg colour233" \
    "set -g pane-active-border-style fg=colour233,bg=colour233"

set -g window-style 'bg=colour234'
set -g window-active-style 'bg=colour233'


# Remove bells
set -g bell-action none
set -g visual-bell off

